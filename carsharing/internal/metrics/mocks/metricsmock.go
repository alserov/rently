// Status generated by MockGen. DO NOT EDIT.
// Source: internal/metrics/metrics.go

// Package metrmock is a generated GoMock package.
package metrmock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMetrics is a mock of Metrics interface.
type MockMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsMockRecorder
}

// MockMetricsMockRecorder is the mock recorder for MockMetrics.
type MockMetricsMockRecorder struct {
	mock *MockMetrics
}

// NewMockMetrics creates a new mock instance.
func NewMockMetrics(ctrl *gomock.Controller) *MockMetrics {
	mock := &MockMetrics{ctrl: ctrl}
	mock.recorder = &MockMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetrics) EXPECT() *MockMetricsMockRecorder {
	return m.recorder
}

// DecreaseActiveRentsAmount mocks base method.
func (m *MockMetrics) DecreaseActiveRentsAmount() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DecreaseActiveRentsAmount")
}

// DecreaseActiveRentsAmount indicates an expected call of DecreaseActiveRentsAmount.
func (mr *MockMetricsMockRecorder) DecreaseActiveRentsAmount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecreaseActiveRentsAmount", reflect.TypeOf((*MockMetrics)(nil).DecreaseActiveRentsAmount))
}

// IncreaseActiveRentsAmount mocks base method.
func (m *MockMetrics) IncreaseActiveRentsAmount() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncreaseActiveRentsAmount")
}

// IncreaseActiveRentsAmount indicates an expected call of IncreaseActiveRentsAmount.
func (mr *MockMetricsMockRecorder) IncreaseActiveRentsAmount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseActiveRentsAmount", reflect.TypeOf((*MockMetrics)(nil).IncreaseActiveRentsAmount))
}

// IncreaseRentsCancel mocks base method.
func (m *MockMetrics) IncreaseRentsCancel() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncreaseRentsCancel")
}

// IncreaseRentsCancel indicates an expected call of IncreaseRentsCancel.
func (mr *MockMetricsMockRecorder) IncreaseRentsCancel() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseRentsCancel", reflect.TypeOf((*MockMetrics)(nil).IncreaseRentsCancel))
}

// NotifyBrandDemand mocks base method.
func (m *MockMetrics) NotifyBrandDemand(brand string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "NotifyBrandDemand", brand)
}

// NotifyBrandDemand indicates an expected call of NotifyBrandDemand.
func (mr *MockMetricsMockRecorder) NotifyBrandDemand(brand interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NotifyBrandDemand", reflect.TypeOf((*MockMetrics)(nil).NotifyBrandDemand), brand)
}
